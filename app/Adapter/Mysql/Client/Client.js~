var fs     = require("fs");
var Bhiv   = require('bhiv');
var mysql  = require('node-wrapper/mysql');

var Yolo = require("lib/Yolo");
 

module.exports = function (node) {
  var Bee  = new Bhiv(node.createInvoke(), node.data).Bee;
  var backend;
  
  node.on('query', new Bee()
    .then(function (flow, callback) {
      if (flow.filename) return node.send('getFile', flow.filename, callback);
      else if (flow.query != undefined) return callback(null, flow.query);
      else callback("No query");
    }, null, {query: '${.}'})
    .then(function (query) { 
      var dbs = node.get('dbs');
      for (var db in dbs)
        query = query.replace('${db.' + db + '}', dbs[db]);
      return query;
    }, '${query}', {query : '${.}'})
    .then(function () {
      if (backend == undefined)
        backend = require('node-wrapper/mysql').createConnection('backend', node.flatten().data);
    })
    .then(function (flow, callback) {
      backend.query(flow.query, flow.params, function (err, data) {
        if (err) return callback(Yolo.Util.wrapError(err));
        return callback(null, data);
      });
    })
    .end()
  );
  
  node.on('getFile', new Bee()
    .then('Yolo.Util.Retriever:url', '${.}', { raw: '${.}' })
    .then(function (raw) { return raw.split("\n").join(" "); }, '${raw}')
    .end()
  );

};