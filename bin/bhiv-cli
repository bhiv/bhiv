#!/bin/sh

bhiv_cli () {
    action="$1";
    if [ -n "$1" ]; then shift; fi
    case "$action" in
        install) bhiv_install $@;;
        update)  bhiv_update $@;;

        create)      bhiv_create $@;;
        init)        bhiv_init_project $@;;
        init-module) bhiv_init_module $@;;
        link)        bhiv_link $@;;

        set-magic)   bhiv_set_magic $@;;

        run)     bhiv_run $@;;
        test)    bhiv_test $@;;

        start)   bhiv_start $@;;
        stop)    bhiv_stop $@;;
        restart) bhiv_restart $@;;

        bind-module)   bhiv_bind_module $@;;
        unbind-module) bhiv_unbind_module $@;;

        help)    bhiv_synopsis $@;;
        *)       bhiv_synopsis $@;;
    esac
    exit ;
}

################################################################
THIS=$(dirname "$(readlink "$0" || echo "$0")")
errcho () { echo $@ 1>&2; }
capitalize () { echo "$(echo -n "$1" | cut -c1 | tr '[a-z]' '[A-Z]')$(echo -n "$1" | cut -c2-)"; }
json () { "$THIS/json" "$1" "$2" "$3" "$4" "$5"; }

VERSION=$(json "$THIS/../package.json" "get-string" "version")

################################################################

bhiv_install () {
    sudo npm install -g 'https://github.com/bhiv/bhiv#master'
}

bhiv_init () {
    if [ ! -d package.json ]
    then
        npm init -y
        json package.json set-string 'main' "$1"
        json package.json set-string 'scripts.test' 'mocha'
        npm install --save-dev mocha
    fi

    ignore=".gitignore"

    bhiv_link

    if [ ! -e "$ignore" ]
    then
        echo -n > "$ignore"
        echo '*~' >> "$ignore"
        echo '.#*#' >> "$ignore"
        echo '#*#' >> "$ignore"
        echo 'node_modules' >> "$ignore"
        echo 'npm-debug.log' >> "$ignore"
    fi

    mkdir -p app config test docs resources
}

bhiv_init_module () {
    index="index.js"

    bhiv_init "$index"

    post='(MODULE=$(basename $(pwd)); cd ../..; node_modules/bhiv/bin/bhiv-cli bind-module $MODULE)'
    json package.json set-string 'scripts.postinstall' "$post"
    json package.json set-string 'peerDependencies.yolojs' "^$bhiv_version"

    if [ ! -e "$index" ]
    then
        echo "console.log('Module can\\'t be executed, run npm test');" > "$index"
    fi
}

bhiv_init_project () {
    index="index.js"

    bhiv_init "$index"

    if [ ! -e "$index" ]
    then
        echo "require('bhiv');" > "$index"
    fi
}

bhiv_create () {
    name="$1"
    port="$2"
    Name=$(capitalize "$name")

    if [ -d app -o -d config ]; then errcho "Not empty project"; exit 1; fi
    if [ -z "$port" ]; then port=7000; fi
    if [ -z "$name" ]; then bhiv_synopsis $@; fi

    route="config/route-$name.$port.map"
    config="config/config-custom.json"
    controller="app/$Name/Controller/Controller.js"
    home="app/$Name/View/Home.nsb"

    mkdir -p node_modules
    mkdir -p "app/$Name/View"
    mkdir -p "app/$Name/Controller"
    mkdir -p "static/$name"

    bhiv_init

    cat << EOF > "$route"
Http GET / $Name.Controller:page-home
EOF

    cat << EOF > "$controller"
module.exports = function (node) {

  node.on('page-home', function (payload, event) {
    var webpage = { type: 'webpage' };
    webpage.title = 'Home Page';
    webpage.body = { fqn: '$Name.View.Home', params: { "text": "Hello world" } };
    return event.reply(null, webpage);
  });

};
EOF

    cat << EOF > "$config"
{ "Services":
  { "App.Routing": { "events": [ [ ":set", "$route" ] ] }
  }
, "Config":
  {
  }
}
EOF

    cat << EOF > "$home"
Bhiv.Ui.Dom {
  + Less style:
    .this { text-align: center; color: #333; }

  > Jade html:
    h1(id=id, class=tags.concat(' '))= params.text

}
EOF
}

bhiv_link () {
    npm link -no-bin-links bhiv
}

################################################################

bhiv_set_magic () {

    while [ -n "$1" ]
    do
        ex "$1" +1 -c 'i|/*!UroxGvT3uDMQCT1va20i43ZZSxo*/' -c x
        shift
    done

}

################################################################

bhiv_run () {
    node index.js
}

bhiv_test () {
    node index.js --test $@
}

################################################################

bhiv_start () {
    echo
}

bhiv_stop () {
    echo
}

bhiv_restart () {
    echo
}

################################################################

bhiv_bind_module () {
    return 
    NAME="$(basename $(pwd))"
    DEPENDENCIES="config/elders.txt"
    MODULE='node_modules/'"$NAME"
    if grep "$MODULE" "$DEPENDENCIES" 2> /dev/null > /dev/null
    then
        echo "($NAME) Already bound"
    else
        echo "$MODULE" >> "$DEPENDENCIES"
    fi
}

bhiv_unbind_module () {
    echo $@
}

################################################################

bhiv_synopsis () {
    echo "SYNOPSIS: bhiv-cli <action> [<args>]"
    if [ "$0" = "help" ]; then exit 0;
    else exit 1; fi
}

################################################################

bhiv_cli $@
