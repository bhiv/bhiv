#!/bin/sh

yolo_cli () {
    action="$1";
    shift;
    case "$action" in
        init)    yolo_init $@;;
        update)  yolo_update $@;;
        upgrade) yolo_upgrade $@;;
        install) yolo_install $@;;
        start)   yolo_start $@;;
        stop)    yolo_stop $@;;
        restart) yolo_restart $@;;
        push)    yolo_push $@;;
        help)    yolo_synopsis $@;;
        *)       yolo_synopsis $@;;
    esac
    exit ;
}

################################################################

errcho () { echo $@ 1>&2; }
capitalize () { echo "$(echo -n "$1" | cut -c1 | tr '[a-z]' '[A-Z]')$(echo -n "$1" | cut -c2-)"; }

################################################################

yolo_init () {
    name="$1"
    port="$2"
    Name=$(capitalize "$name")

    if [ -d app -o -d config -o -d static ]; then errcho "Not empty project"; exit 1; fi
    if [ -z "$port" ]; then port=7000; fi
    if [ -z "$name" ]; then yolo_synopsis $@; fi
    if [ ! -d package.json ]; then npm init -y; fi

    index="index.js"
    route="config/route-$name.$port.map"
    controller="app/$Name/Controller/Controller.js"
    home="app/$Name/Views/Home.nsb"

    mkdir -p node_modules
    mkdir -p app config static
    mkdir -p "app/$Name/Controller"
    mkdir -p "app/$Name/Views"
    mkdir -p "static/$name"

    npm link -no-bin-links yolojs

    cat << EOF > "$index"
require('yolojs');
EOF

    cat << EOF > "$route"
Http / $Name.Controller:page-home
EOF

    cat << EOF > "$controller"
module.exports = function (node) {

  node.on('page-home', function (payload, event) {
    var weppage = { type: 'webpage' };
    webpage.title = 'Home Page';
    webpage.body = { fqn: '$Name.Home', params: { "text": "Hello world" } };
    return event.reply(null, webpage);
  });

};
EOF

    cat << EOF > "$home"
Yolo.Ui.Dom {
  + Less style:
    .this { text-align: center; color: #333; }

  > Jade html:
    h1(id=id, class=tags.concat(' '))= params.text

}
EOF
}

yolo_install () {
    sudo npm install -g 'https://github.com/np42/yolojs#master'
}

yolo_start () {
    echo
}

yolo_stop () {
    echo
}

yolo_restart () {
    echo
}

################################################################

yolo_push () {
    echo
}

################################################################

yolo_synopsis () {
    
    if [ "$0" = "help" ]; then exit 0;
    else exit 1; fi
}

################################################################

yolo_cli $@
