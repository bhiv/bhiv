#!/bin/sh

yolo_cli () {
    action="$1";
    shift;
    case "$action" in
        install) yolo_install $@;;
        update) yolo_update $@;;

        create)  yolo_create $@;;
        init)    yolo_init $@;;
        link)    yolo_link $@;;

        run)     yolo_run $@;;
        test)    yolo_test $@;;

        start)   yolo_start $@;;
        stop)    yolo_stop $@;;
        restart) yolo_restart $@;;

        bind-module)   yolo_bind_module $@;;
        unbind-module) yolo_unbind_module $@;;

        help)    yolo_synopsis $@;;
        *)       yolo_synopsis $@;;
    esac
    exit ;
}

################################################################

errcho () { echo $@ 1>&2; }
capitalize () { echo "$(echo -n "$1" | cut -c1 | tr '[a-z]' '[A-Z]')$(echo -n "$1" | cut -c2-)"; }

################################################################

yolo_install () {
    sudo npm install -g 'https://github.com/np42/yolojs#master'
}

yolo_init () {
    if [ ! -d package.json ]; then npm init -y; fi

    index="index.js"
    ignore=".gitignore"

    yolo_link

    if [ ! -e "$index" ]
    then
        echo "require('yolojs');" > "$index"
    fi

    if [ ! -e "$ignore" ]
    then
        echo -n > "$ignore"
        echo '*~' >> "$ignore"
        echo '.#*#' >> "$ignore"
        echo '#*#' >> "$ignore"
        echo 'node_modules' >> "$ignore"
    fi

    mkdir -p app config test docs resources
}

yolo_create () {
    name="$1"
    port="$2"
    Name=$(capitalize "$name")

    if [ -d app -o -d config ]; then errcho "Not empty project"; exit 1; fi
    if [ -z "$port" ]; then port=7000; fi
    if [ -z "$name" ]; then yolo_synopsis $@; fi

    route="config/route-$name.$port.map"
    config="config/config-custom.json"
    controller="app/$Name/Controller/Controller.js"
    home="app/$Name/View/Home.nsb"

    mkdir -p node_modules
    mkdir -p "app/$Name/View"
    mkdir -p "app/$Name/Controller"
    mkdir -p "static/$name"

    yolo_init

    cat << EOF > "$route"
Http GET / $Name.Controller:page-home
EOF

    cat << EOF > "$controller"
module.exports = function (node) {

  node.on('page-home', function (payload, event) {
    var webpage = { type: 'webpage' };
    webpage.title = 'Home Page';
    webpage.body = { fqn: '$Name.View.Home', params: { "text": "Hello world" } };
    return event.reply(null, webpage);
  });

};
EOF

    cat << EOF > "$config"
{ "Services":
  { "App.Routing": { "events": [ [ ":set", "$route" ] ] }
  }
, "Config":
  {
  }
}
EOF

    cat << EOF > "$home"
Yolo.Ui.Dom {
  + Less style:
    .this { text-align: center; color: #333; }

  > Jade html:
    h1(id=id, class=tags.concat(' '))= params.text

}
EOF
}

yolo_link () {
    npm link -no-bin-links yolojs
}

################################################################

yolo_run () {
    node index.js
}

yolo_test () {
    node index.js --test $@
}

################################################################

yolo_start () {
    echo
}

yolo_stop () {
    echo
}

yolo_restart () {
    echo
}

################################################################

yolo_bind_module () {
    NAME="$1"
    DEPENDENCIES="config/elders.txt"
    MODULE='node_modules/'"$NAME"
    if grep "$MODULE" "$DEPENDENCIES" 2> /dev/null > /dev/null
    then
        echo "($NAME) Already bound"
    else
        echo "$MODULE" >> "$DEPENDENCIES"
    fi
}

yolo_unbind_module () {
    echo $@
}

################################################################

yolo_synopsis () {

    if [ "$0" = "help" ]; then exit 0;
    else exit 1; fi
}

################################################################

yolo_cli $@
